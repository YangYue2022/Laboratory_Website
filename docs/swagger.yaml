definitions:
  models.Member:
    properties:
      description:
        type: string
      email:
        type: string
      id:
        type: integer
      identity:
        type: string
      name:
        type: string
      phone_number:
        type: string
      photo_url:
        type: string
      title:
        type: string
    type: object
  models.Qa:
    properties:
      ans:
        type: string
      id:
        type: integer
      que:
        type: string
    type: object
  models.Reward:
    properties:
      id:
        type: integer
      name:
        type: string
      project:
        type: string
      type:
        type: string
      winner:
        type: string
      year:
        type: integer
    type: object
  models.Work:
    properties:
      desc:
        type: string
      id:
        type: integer
      type:
        type: string
      year:
        type: integer
    type: object
  v1.AddRecordRequest:
    properties:
      images:
        items:
          $ref: '#/definitions/v1.Image'
        type: array
      name:
        type: string
      year:
        type: string
    required:
    - images
    - name
    - year
    type: object
  v1.Image:
    properties:
      name:
        type: string
      url:
        type: string
    required:
    - name
    - url
    type: object
  v1.UpdateVisibilityRequest:
    properties:
      id:
        type: integer
      visibility:
        type: boolean
    required:
    - id
    - visibility
    type: object
info:
  contact: {}
paths:
  /api/admin/member:
    post:
      consumes:
      - application/json
      description: 添加一个新的成员记录
      parameters:
      - description: 成员详情
        in: body
        name: member
        required: true
        schema:
          $ref: '#/definitions/models.Member'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 400, msg: ''INVALID_PARAMS'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 新增成员
      tags:
      - 成员
  /api/admin/member/{id}:
    delete:
      description: 通过成员ID删除一个成员记录
      parameters:
      - description: 成果ID
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 10001, msg: ''ERROR_NOT_EXIST_MEMBER'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 删除成员
      tags:
      - 成员
    put:
      consumes:
      - application/json
      description: 更新成员的详细信息
      parameters:
      - description: 成员详情
        in: body
        name: member
        required: true
        schema:
          $ref: '#/definitions/models.Member'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 1004, msg: ''ERROR_NOT_EXIST_MEMBER'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 更新成员
      tags:
      - 成员
  /api/admin/qa:
    post:
      consumes:
      - application/json
      description: 添加一个新的问答记录，包括问题和答案
      parameters:
      - description: 问答详细信息
        in: body
        name: qa
        required: true
        schema:
          $ref: '#/definitions/models.Qa'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 400, msg: ''INVALID_PARAMS'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 添加问答
      tags:
      - 问答
  /api/admin/qa/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除指定的问答记录
      parameters:
      - description: 问答ID
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 10003, msg: ''ERROR_NOT_EXIST_QA '', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 删除问答
      tags:
      - 问答
    put:
      consumes:
      - application/json
      description: 根据ID编辑问答记录，更新问题和答案
      parameters:
      - description: 问答ID
        in: path
        name: id
        required: true
        type: integer
      - description: 问答详细信息
        in: body
        name: qa
        required: true
        schema:
          $ref: '#/definitions/models.Qa'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 10003, msg: ''ERROR_NOT_EXIST_QA'', data: {item:想要编辑的问答条目}'
          schema:
            additionalProperties: true
            type: object
      summary: 编辑问答
      tags:
      - 问答
  /api/admin/record:
    post:
      consumes:
      - application/json
      description: 新增一个活动及其图片记录
      parameters:
      - description: 活动信息和图片URL列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.AddRecordRequest'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 400, msg: ''请求参数错误'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 新增记录
      tags:
      - 记录
  /api/admin/record/{id}:
    delete:
      description: 通过记录ID删除一个记录
      parameters:
      - description: 成果ID
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 10005, msg: ''该记录不存在'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 删除记录
      tags:
      - 记录
  /api/admin/record/visibility:
    put:
      consumes:
      - application/json
      description: 更新指定记录的可见性状态
      parameters:
      - description: 记录ID和可见性状态
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateVisibilityRequest'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 400, msg: ''INVALID_PARAMS'', error: ''错误信息'''
          schema:
            additionalProperties: true
            type: object
      summary: 更新记录可见性
      tags:
      - 记录
  /api/admin/reward:
    post:
      consumes:
      - application/json
      description: 新增奖励（竞赛名称，项目名称，年份，类型，获奖人）
      parameters:
      - description: Add Reward Request
        in: body
        name: reward
        required: true
        schema:
          $ref: '#/definitions/models.Reward'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 500, msg: ''INVALID_PARAMS'', data: nil'
          schema:
            additionalProperties: true
            type: object
      summary: 新增奖励
      tags:
      - 奖励
  /api/admin/reward/{id}:
    delete:
      consumes:
      - application/json
      description: 通过奖励ID删除一个奖励项
      parameters:
      - description: 奖励ID
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 10002, msg: ''ERROR_NOT_EXIST_REWARD'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 删除奖励
      tags:
      - 奖励
    put:
      consumes:
      - application/json
      description: 根据id更新已存在的奖励
      parameters:
      - description: Reward ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Reward Request
        in: body
        name: reward
        required: true
        schema:
          $ref: '#/definitions/models.Reward'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 10002, msg: ''ERROR_NOT_EXIST_REWARD'', data: nil'
          schema:
            additionalProperties: true
            type: object
      summary: 编辑奖励
      tags:
      - 奖励
  /api/admin/work:
    post:
      consumes:
      - application/json
      description: 添加一个新的成果记录
      parameters:
      - description: 成果详情
        in: body
        name: work
        required: true
        schema:
          $ref: '#/definitions/models.Work'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 400, msg: ''INVALID_PARAMS'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 新增成果
      tags:
      - 成果
  /api/admin/work/{id}:
    delete:
      consumes:
      - application/json
      description: 通过成果ID删除一个成果记录
      parameters:
      - description: 成果ID
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 10001, msg: ''ERROR_NOT_EXIST_WORK'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 删除成果
      tags:
      - 成果
    put:
      consumes:
      - application/json
      description: 根据ID更新成果的详细信息
      parameters:
      - description: 成果ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新成果详情
        in: body
        name: work
        required: true
        schema:
          $ref: '#/definitions/models.Work'
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 10001, msg: ''ERROR_NOT_EXIST_WORK'', data: {}'
          schema:
            additionalProperties: true
            type: object
      summary: 更新成果
      tags:
      - 成果
  /api/members:
    get:
      consumes:
      - application/json
      description: 根据身份和姓名进行筛选，获取成员列表
      parameters:
      - description: 成员姓名
        in: query
        name: name
        type: string
      - description: 成员身份
        in: query
        name: type
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 200, msg: ''SUCCESS'', data: {lists: 成果列表, total: 总数}'
          schema:
            additionalProperties: true
            type: object
      summary: 获取成员列表
      tags:
      - 成员
  /api/qas:
    get:
      consumes:
      - application/json
      description: 根据问题关键字模糊查询问答列表
      parameters:
      - description: 问题关键字（模糊查询）
        in: query
        name: que
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 200, msg: ''SUCCESS'', data: {lists: 问答列表, total: 总数}'
          schema:
            additionalProperties: true
            type: object
      summary: 获取问答列表
      tags:
      - 问答
  /api/records:
    get:
      description: 根据活动名称模糊匹配，获取记录列表
      parameters:
      - description: 活动名称
        in: query
        name: activity_name
        type: string
      - description: 可见
        in: query
        name: visibility
        type: boolean
      - description: 页码
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 200, msg: ''SUCCESS'', data: {lists: 记录列表, total: 总数}'
          schema:
            additionalProperties: true
            type: object
      summary: 获取记录列表
      tags:
      - 记录
  /api/rewards:
    get:
      consumes:
      - application/json
      description: 根据类型和项目名称查询
      parameters:
      - description: 项目名称
        in: query
        name: project
        type: string
      - description: 类型（竞赛/其他）
        in: query
        name: type
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 200, msg: ''success'', data: {lists, total}'
          schema:
            additionalProperties: true
            type: object
      summary: 获取奖励列表
      tags:
      - 奖励
  /api/v1/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传图片接口
      parameters:
      - description: 图片文件
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 'code": 400, "msg": "请求参数错误", "data": {} "请求参数错误，图片为空'
          schema:
            additionalProperties: true
            type: object
      summary: 上传图片
      tags:
      - 图片
  /api/works:
    get:
      consumes:
      - application/json
      description: 根据名称和类型进行筛选，获取成果列表
      parameters:
      - description: 成果名称（模糊匹配）
        in: query
        name: name
        type: string
      - description: 成果类型
        in: query
        name: type
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 200, msg: ''SUCCESS'', data: {lists: 成果列表, total: 总数}'
          schema:
            additionalProperties: true
            type: object
      summary: 获取成果列表
      tags:
      - 成果
  /auth:
    get:
      consumes:
      - application/json
      description: 根据提供的用户名和密码进行登录认证，成功后返回JWT令牌
      parameters:
      - description: 用户名
        in: query
        name: username
        required: true
        type: string
      - description: 密码
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'code: 返回码, msg: 返回信息, data: 返回数据'
          schema:
            additionalProperties: true
            type: object
      summary: 用户登录认证
      tags:
      - 认证
swagger: "2.0"
